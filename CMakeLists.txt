#
# Auto-generated cmake build file for gusimplewhiteboard
#
cmake_minimum_required(VERSION 3.15.0)
project(gusimplewhiteboard C CXX)
enable_testing()
find_package(gu_util CONFIG REQUIRED)
find_package(guunits CONFIG REQUIRED)
find_package(gucoordinates CONFIG REQUIRED)
include( GNUInstallDirs )
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)
add_compile_definitions(BUILD_WB_LIBRARY_GUWHITEBOARD WANT_OLD_WHITEBOARD_NAMING_COMPAT WHITEBOARD_SERIALISATION)
include_directories($<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/./ $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/.//typeClassDefs $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/typeClassDefs $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/gusimplewhiteboard> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>/gusimplewhiteboard/typeClassDefs $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>/typeClassDefs ../../Common $<BUILD_INTERFACE:/include/gu_util> $<INSTALL_INTERFACE:include/gu_util> /usr/local/include/gu_util $<BUILD_INTERFACE:/include/guunits> $<INSTALL_INTERFACE:include/guunits> /usr/local/include/guunits $<BUILD_INTERFACE:/include/gucoordinates> $<INSTALL_INTERFACE:include/gucoordinates> /usr/local/include/gucoordinates /usr/local/include)
link_directories(/usr/local/lib)
add_library(libgusimplewhiteboard SHARED ../../posix/gu_util/gu_util.cpp typeClassDefs/wb_adjust_position_confidence.c typeClassDefs/wb_ball_position.c typeClassDefs/wb_buttons.c typeClassDefs/wb_count.c typeClassDefs/wb_data_logger.c typeClassDefs/wb_dominant_frequencies.c typeClassDefs/wb_filtered_arrayballsightings.c typeClassDefs/wb_filtered_arrayonedimobjects.c typeClassDefs/wb_filtered_vision_object.c typeClassDefs/wb_frequency_limits.c typeClassDefs/wb_gu_vr_teleop_vulkan_control.c typeClassDefs/wb_hal_arm_target.c typeClassDefs/wb_hal_leg_target.c typeClassDefs/wb_head_joint_sensors.c typeClassDefs/wb_input3d.c typeClassDefs/wb_landmark_sighting.c typeClassDefs/wb_line_sighting.c typeClassDefs/wb_location.c typeClassDefs/wb_machine_filtered_lines.c typeClassDefs/wb_machine_filtered_localisation_vision.c typeClassDefs/wb_machine_filtered_vision.c typeClassDefs/wb_memory_image_control_status.c typeClassDefs/wb_microphone_frequencies.c typeClassDefs/wb_microwave_status.c typeClassDefs/wb_mission_priority_for_obstacles.c typeClassDefs/wb_my_position.c typeClassDefs/wb_nao_joint_list_float.c typeClassDefs/wb_nao_obstacle_direction.c typeClassDefs/wb_nao_sonar_protected_walk_command.c typeClassDefs/wb_nao_walk_command.c typeClassDefs/wb_nao_walk_status.c typeClassDefs/wb_odometry.c typeClassDefs/wb_overheating.c typeClassDefs/wb_particle_output_map.c typeClassDefs/wb_particle_position.c typeClassDefs/wb_pixel_coordinate.c typeClassDefs/wb_pixel_coordinate_line.c typeClassDefs/wb_pixel_to_robot_relative_coord.c typeClassDefs/wb_point2d.c typeClassDefs/wb_polar_coordinate.c typeClassDefs/wb_r_m_s_levels.c typeClassDefs/wb_sensors_armjointsensors.c typeClassDefs/wb_sensors_body_sensors.c typeClassDefs/wb_sensors_foot_sensors.c typeClassDefs/wb_sensors_hand_sensors.c typeClassDefs/wb_sensors_head_sensors.c typeClassDefs/wb_sensors_headjointsensors.c typeClassDefs/wb_sensors_legjointsensors.c typeClassDefs/wb_sensors_legjointtemps.c typeClassDefs/wb_sensors_torsojointsensors.c typeClassDefs/wb_sensors_torsojointtemps.c typeClassDefs/wb_teleoperation_control.c typeClassDefs/wb_teleoperation_control_v_r.c typeClassDefs/wb_teleoperation_status.c typeClassDefs/wb_temperature_sensors.c typeClassDefs/wb_top_particles.c typeClassDefs/wb_vision_control_status.c typeClassDefs/wb_vision_detection_ball.c typeClassDefs/wb_vision_detection_balls.c typeClassDefs/wb_vision_detection_feature.c typeClassDefs/wb_vision_detection_feature_array.c typeClassDefs/wb_vision_detection_features.c typeClassDefs/wb_vision_detection_goal.c typeClassDefs/wb_vision_detection_goal_post.c typeClassDefs/wb_vision_detection_goals.c typeClassDefs/wb_vision_detection_horizon.c typeClassDefs/wb_vision_detection_horizons.c typeClassDefs/wb_vision_detection_line_array.c typeClassDefs/wb_vision_detection_lines.c typeClassDefs/wb_vision_field_feature.c typeClassDefs/wb_vision_field_features.c typeClassDefs/wb_vision_line.c typeClassDefs/wb_vision_lines.c guWhiteboard_gugenericwhiteboardobject.cpp gugenericwhiteboardobject.cpp guwhiteboardgetter.cpp guwhiteboardposter.cpp gusimplewhiteboard.c guwhiteboardtypelist_c_typestrings_generated.c guwhiteboardtypelist_c_typestrings_generated_default.c guwhiteboardserialiser.c guwhiteboarddeserialiser.c libgusimplewhiteboardmain.cc)
add_library(libgusimplewhiteboardStatic STATIC ../../posix/gu_util/gu_util.cpp typeClassDefs/wb_adjust_position_confidence.c typeClassDefs/wb_ball_position.c typeClassDefs/wb_buttons.c typeClassDefs/wb_count.c typeClassDefs/wb_data_logger.c typeClassDefs/wb_dominant_frequencies.c typeClassDefs/wb_filtered_arrayballsightings.c typeClassDefs/wb_filtered_arrayonedimobjects.c typeClassDefs/wb_filtered_vision_object.c typeClassDefs/wb_frequency_limits.c typeClassDefs/wb_gu_vr_teleop_vulkan_control.c typeClassDefs/wb_hal_arm_target.c typeClassDefs/wb_hal_leg_target.c typeClassDefs/wb_head_joint_sensors.c typeClassDefs/wb_input3d.c typeClassDefs/wb_landmark_sighting.c typeClassDefs/wb_line_sighting.c typeClassDefs/wb_location.c typeClassDefs/wb_machine_filtered_lines.c typeClassDefs/wb_machine_filtered_localisation_vision.c typeClassDefs/wb_machine_filtered_vision.c typeClassDefs/wb_memory_image_control_status.c typeClassDefs/wb_microphone_frequencies.c typeClassDefs/wb_microwave_status.c typeClassDefs/wb_mission_priority_for_obstacles.c typeClassDefs/wb_my_position.c typeClassDefs/wb_nao_joint_list_float.c typeClassDefs/wb_nao_obstacle_direction.c typeClassDefs/wb_nao_sonar_protected_walk_command.c typeClassDefs/wb_nao_walk_command.c typeClassDefs/wb_nao_walk_status.c typeClassDefs/wb_odometry.c typeClassDefs/wb_overheating.c typeClassDefs/wb_particle_output_map.c typeClassDefs/wb_particle_position.c typeClassDefs/wb_pixel_coordinate.c typeClassDefs/wb_pixel_coordinate_line.c typeClassDefs/wb_pixel_to_robot_relative_coord.c typeClassDefs/wb_point2d.c typeClassDefs/wb_polar_coordinate.c typeClassDefs/wb_r_m_s_levels.c typeClassDefs/wb_sensors_armjointsensors.c typeClassDefs/wb_sensors_body_sensors.c typeClassDefs/wb_sensors_foot_sensors.c typeClassDefs/wb_sensors_hand_sensors.c typeClassDefs/wb_sensors_head_sensors.c typeClassDefs/wb_sensors_headjointsensors.c typeClassDefs/wb_sensors_legjointsensors.c typeClassDefs/wb_sensors_legjointtemps.c typeClassDefs/wb_sensors_torsojointsensors.c typeClassDefs/wb_sensors_torsojointtemps.c typeClassDefs/wb_teleoperation_control.c typeClassDefs/wb_teleoperation_control_v_r.c typeClassDefs/wb_teleoperation_status.c typeClassDefs/wb_temperature_sensors.c typeClassDefs/wb_top_particles.c typeClassDefs/wb_vision_control_status.c typeClassDefs/wb_vision_detection_ball.c typeClassDefs/wb_vision_detection_balls.c typeClassDefs/wb_vision_detection_feature.c typeClassDefs/wb_vision_detection_feature_array.c typeClassDefs/wb_vision_detection_features.c typeClassDefs/wb_vision_detection_goal.c typeClassDefs/wb_vision_detection_goal_post.c typeClassDefs/wb_vision_detection_goals.c typeClassDefs/wb_vision_detection_horizon.c typeClassDefs/wb_vision_detection_horizons.c typeClassDefs/wb_vision_detection_line_array.c typeClassDefs/wb_vision_detection_lines.c typeClassDefs/wb_vision_field_feature.c typeClassDefs/wb_vision_field_features.c typeClassDefs/wb_vision_line.c typeClassDefs/wb_vision_lines.c guWhiteboard_gugenericwhiteboardobject.cpp gugenericwhiteboardobject.cpp guwhiteboardgetter.cpp guwhiteboardposter.cpp gusimplewhiteboard.c guwhiteboardtypelist_c_typestrings_generated.c guwhiteboardtypelist_c_typestrings_generated_default.c guwhiteboardserialiser.c guwhiteboarddeserialiser.c libgusimplewhiteboardmain.cc)
set_target_properties(libgusimplewhiteboard PROPERTIES OUTPUT_NAME gusimplewhiteboard)
set_target_properties(libgusimplewhiteboardStatic PROPERTIES OUTPUT_NAME gusimplewhiteboard)
set_property(TARGET libgusimplewhiteboard PROPERTY POSITION_INDEPENDENT_CODE 1)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}")
set(CMAKE_SKIP_BUILD_RPATH FALSE)
set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib;/usr/local/lib")
target_include_directories(libgusimplewhiteboard INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/./ $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/.//typeClassDefs $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/typeClassDefs $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/gusimplewhiteboard> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>/gusimplewhiteboard/typeClassDefs $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>/typeClassDefs)
target_include_directories(libgusimplewhiteboard PUBLIC $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/gusimplewhiteboard> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>/gusimplewhiteboard/typeClassDefs $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>/typeClassDefs)
target_link_libraries(libgusimplewhiteboard gu_util guunits gucoordinates)
include(CMakePackageConfigHelpers)
configure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in "${CMAKE_CURRENT_BINARY_DIR}/gusimplewhiteboardConfig.cmake" INSTALL_DESTINATION "lib/cmake/gusimplewhiteboard" NO_SET_AND_CHECK_MACRO NO_CHECK_REQUIRED_COMPONENTS_MACRO )
write_basic_package_version_file( "${CMAKE_CURRENT_BINARY_DIR}/gusimplewhiteboardConfigVersion.cmake" VERSION "1.0" COMPATIBILITY AnyNewerVersion )
install(TARGETS libgusimplewhiteboard libgusimplewhiteboardStatic DESTINATION lib EXPORT gusimplewhiteboard)
install(FILES gugenericwhiteboardobject.h guwhiteboardgetter.h guwhiteboardposter.h guwhiteboardwatcher.h guwhiteboardtypelist_generated.h WBFunctor_types_generated.h gusimplewhiteboard.h WBFunctor.h WBMsg.h guwhiteboardserialisation.h guwhiteboard_c_types.h guwhiteboard_c_types_manual_definitions.h guwhiteboardtypelist_c_generated.h guwhiteboardtypelist_c_generated_default.h guWhiteboard_gugenericwhiteboardobject.h guwhiteboardserialisation.h gugenericwhiteboardobject.h guwhiteboardgetter.h guwhiteboardposter.h guwhiteboardwatcher.h guwhiteboardtypelist_generated.h WBFunctor_types_generated.h gusimplewhiteboard.h WBFunctor.h WBMsg.h guwhiteboardserialisation.h guwhiteboard_c_types.h guwhiteboard_c_types_manual_definitions.h guwhiteboardtypelist_c_generated.h guwhiteboardtypelist_c_generated_default.h guWhiteboard_gugenericwhiteboardobject.h guwhiteboardserialisation.h guwhiteboard_c_types.h guwhiteboardserialisation.h guwhiteboard_c_types_manual_definitions.h DESTINATION include/gusimplewhiteboard)
install(DIRECTORY typeClassDefs DESTINATION include/gusimplewhiteboard)
install(DIRECTORY OLD_WB DESTINATION include/gusimplewhiteboard)
install(DIRECTORY OLD_WB DESTINATION include/gusimplewhiteboard)
install(EXPORT gusimplewhiteboard FILE gusimplewhiteboard.cmake DESTINATION lib/cmake/gusimplewhiteboard )
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/gusimplewhiteboardConfig.cmake ${CMAKE_CURRENT_BINARY_DIR}/gusimplewhiteboardConfigVersion.cmake DESTINATION lib/cmake/gusimplewhiteboard )
export(EXPORT gusimplewhiteboard FILE "${CMAKE_CURRENT_BINARY_DIR}/gusimplewhiteboard.cmake" )
