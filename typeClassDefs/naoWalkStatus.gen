-author Carl Lusty

-c++

#include "Odometry.h"

-c

#include "wb_odometry.h"

enum WalkEngineState {
	wes_Disconnected = 0,   ///< Not connected to the DCM, does not control any joints in this state
	wes_Walking,            ///< Walking around, includes stopping, kicking, transition from Standing etc... basically the walk engine is doing something
	wes_StoppedReady,       ///< In the Crouched stance, ready to walk again straight away but not currently moving anywhere
  wes_StoppedStanding     ///< In the Standing position, this position uses less power than Stopped / Crouched, it is a minimal stiffness posture. The robot it standing taller than the StoppedReady pose, with the legs straight.
};

-properties

enum WalkEngineState walkEngineState = wes_Disconnected // The current state of the walk engine, see enum documentation.

gen Odometry odometry // Current odometry object

uint8_t odometryResetCounter // A counter used to reset the odometry object, change this value and send it via NaoWalkCommand to trigger an odometry reset.

-comment
Status message for the walk engine created by UNSW.
LICENSE:
https://github.com/UNSWComputing/rUNSWift-2017-release/blob/master/LICENSE
Source:
https://github.com/UNSWComputing/rUNSWift-2017-release/blob/master/robot/motion/generator/Walk2014Generator.cpp
Some of their documentation:
https://github.com/UNSWComputing/rUNSWift-2017-release/wiki/Motion#walk2014-generator

