/*
 * file SensorsHandSensors.swift
 *
 * This file was generated by classgenerator from sensors_hand_sensors.gen.
 * DO NOT CHANGE MANUALLY!
 *
 * Copyright Â© 2019 Dimitri Joukoff. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials
 *    provided with the distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgement:
 *
 *        This product includes software developed by Dimitri Joukoff.
 *
 * 4. Neither the name of the author nor the names of contributors
 *    may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * -----------------------------------------------------------------------
 * This program is free software; you can redistribute it and/or
 * modify it under the above terms or under the terms of the GNU
 * General Public License as published by the Free Software Foundation;
 * either version 2 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see http://www.gnu.org/licenses/
 * or write to the Free Software Foundation, Inc., 51 Franklin Street,
 * Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

//swiftlint:disable function_body_length
//swiftlint:disable file_length
//swiftlint:disable line_length
//swiftlint:disable identifier_name

/**
 *  Contains the current values of sensors located on the robots hands (designed for Nao H25 only)
 * 
 * Examples
 * 
 * Get the state of the LHand_Touch_Left sensor
 * 
 *     SensorsArmSensors s = SensorsArmSensors_t.get(); //get from the whiteboard
 *     bool button_state = s.LHand_Touch_Left(); //pull the variable out of the class
 * 
 * Notes:
 * Only the H25 model has capacitive sensors in the hands.  Our V5's are H25 models.
 */
extension wb_sensors_hand_sensors {

    /**
     * Create a new `wb_sensors_hand_sensors`.
     */
    public static func make() -> wb_sensors_hand_sensors {
        return wb_sensors_hand_sensors(true)
    }

    /**
     * Create a new `wb_sensors_hand_sensors`.
     */
    public init(_ LHand_Touch_Left: Bool = true, LHand_Touch_Back: Bool = true, LHand_Touch_Right: Bool = true, RHand_Touch_Left: Bool = true, RHand_Touch_Back: Bool = true, RHand_Touch_Right: Bool = true) {
        self.init()
        self.LHand_Touch_Left = LHand_Touch_Left
        self.LHand_Touch_Back = LHand_Touch_Back
        self.LHand_Touch_Right = LHand_Touch_Right
        self.RHand_Touch_Left = RHand_Touch_Left
        self.RHand_Touch_Back = RHand_Touch_Back
        self.RHand_Touch_Right = RHand_Touch_Right
    }

    /**
     * Create a `wb_sensors_hand_sensors` from a dictionary.
     */
    public init(fromDictionary dictionary: [String: Any]) {
        self.init()
        guard
            let LHand_Touch_Left = dictionary["LHand_Touch_Left"] as? Bool,
            let LHand_Touch_Back = dictionary["LHand_Touch_Back"] as? Bool,
            let LHand_Touch_Right = dictionary["LHand_Touch_Right"] as? Bool,
            let RHand_Touch_Left = dictionary["RHand_Touch_Left"] as? Bool,
            let RHand_Touch_Back = dictionary["RHand_Touch_Back"] as? Bool,
            let RHand_Touch_Right = dictionary["RHand_Touch_Right"] as? Bool
        else {
            fatalError("Unable to convert \(dictionary) to wb_sensors_hand_sensors.")
        }
        self.LHand_Touch_Left = LHand_Touch_Left
        self.LHand_Touch_Back = LHand_Touch_Back
        self.LHand_Touch_Right = LHand_Touch_Right
        self.RHand_Touch_Left = RHand_Touch_Left
        self.RHand_Touch_Back = RHand_Touch_Back
        self.RHand_Touch_Right = RHand_Touch_Right
    }

}

extension wb_sensors_hand_sensors: CustomStringConvertible {

    /**
     * Convert to a description String.
     */
    public var description: String {
        var descString = ""
        descString += "LHand_Touch_Left=\(self.LHand_Touch_Left)"
        descString += ", "
        descString += "LHand_Touch_Back=\(self.LHand_Touch_Back)"
        descString += ", "
        descString += "LHand_Touch_Right=\(self.LHand_Touch_Right)"
        descString += ", "
        descString += "RHand_Touch_Left=\(self.RHand_Touch_Left)"
        descString += ", "
        descString += "RHand_Touch_Back=\(self.RHand_Touch_Back)"
        descString += ", "
        descString += "RHand_Touch_Right=\(self.RHand_Touch_Right)"
        return descString
    }

}

extension wb_sensors_hand_sensors: Equatable {}

public func == (lhs: wb_sensors_hand_sensors, rhs: wb_sensors_hand_sensors) -> Bool {
    return lhs.LHand_Touch_Left == rhs.LHand_Touch_Left
        && lhs.LHand_Touch_Back == rhs.LHand_Touch_Back
        && lhs.LHand_Touch_Right == rhs.LHand_Touch_Right
        && lhs.RHand_Touch_Left == rhs.RHand_Touch_Left
        && lhs.RHand_Touch_Back == rhs.RHand_Touch_Back
        && lhs.RHand_Touch_Right == rhs.RHand_Touch_Right
}
