-author Callum McColl

-c

#include "wb_line_sighting.h"

-c++

#include "LineSighting.h"
#include <SimpleShapes.h>

%c++

int firstSighting(LineSightingType sightingType)
{
    for (int i = 0; i < this->numberOfSightings(); i++) {
        if (this->sightings(i).sightingType() == sightingType)
        {
            return i;
        }
    }
    return -1;

}

int closestFeildLine() {
	short d = 0;
	short index = -1;
	for(int i = 0; i < this->numberOfSightings(); ++i) {
		LineSighting line(this->sightings(i));
		if(line.sightingType() == FieldLineSightingType) {
			short dist = line.simpleLine().distanceToLineSegment();
			if(dist < d || index < 0) {
				d = dist;
				index = short(i);
			}
		}
	}
	return index;
}

int horizonLine()
{
    return this->firstSighting(HorizonLineSightingType);
}

int fieldLine()
{
    return this->firstSighting(FieldLineSightingType);
}

-properties

uint8_t numberOfSightings = 0 // The number of sightings in `sightings`.
gen line_sighting sightings[8] // All sightings.

-comment
Results of the KalmanFilter machines for lines.

