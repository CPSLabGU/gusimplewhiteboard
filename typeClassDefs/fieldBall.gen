-author Carl Lusty

-c
#include <stdint.h>

enum BallOptions {
	NoBallDetected = 0, ///< No Ball Found
	BallDetected        ///< Ball Found
};

%c++
/**                                            
 * Create a new `FieldBall`, using centered 0,0 coords.
 */
FieldBall(uint16_t nx, uint16_t ny, enum BallOptions sightingType = NoBallDetected, int16_t x = 0, int16_t y = 0, float r = 0)     {
  set_sightingType(sightingType);
  set_x(x + (nx / 2));
  set_y(y + (ny / 2));
  set_r(r);
}

/**
 * From the center of the image, positive is to the right of the image
 */
int x_centered(uint16_t nx) { 
    return x() - (nx / 2);
}

/**
 * From the center of the image, positive is upwards in the image
 */
int y_centered(uint16_t ny) {
    return -(  - (ny /2) + y() );
}

%swift
/**
 * Create a new `wb_field_ball`, using centered 0,0 coords.
 */ 
public init(nx: UInt16, ny: UInt16, sightingType: BallOptions = NoBallDetected, x: UInt16 = 0, y: UInt16 = 0, r: Float = 0) {
    self.sightingType = sightingType
    self.x = x + (nx / 2)
    self.y = y + (ny / 2)
    self.r = r
}

public func x_centered(nx: UInt16) -> Int {
    return self.x - (nx / 2)
}

public func y_centered(ny: UInt16) -> Int {
    return -( - (ny / 2) + self.y)
}

-properties
enum BallOptions sightingType = NoBallDetected // Ball detection details.

uint16_t x = 0  //X position
uint16_t y = 0  //Y position
float r = 0     //Radius

-comment
Results for the Ball Ray Tracer (guvision). 
Coords are in visions XY system. 0,0 is the top left position. The bottom right position is dependant on the resolution in vision and should be check from the vision status whiteboard message.

