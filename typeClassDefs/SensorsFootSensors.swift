/*
 * file SensorsFootSensors.swift
 *
 * This file was generated by classgenerator from sensors_foot_sensors.gen.
 * DO NOT CHANGE MANUALLY!
 *
 * Created by Carl Lusty at 16:12, 08/11/2018.
 * Copyright Â© 2018 Carl Lusty. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials
 *    provided with the distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgement:
 *
 *        This product includes software developed by Carl Lusty.
 *
 * 4. Neither the name of the author nor the names of contributors
 *    may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * -----------------------------------------------------------------------
 * This program is free software; you can redistribute it and/or
 * modify it under the above terms or under the terms of the GNU
 * General Public License as published by the Free Software Foundation;
 * either version 2 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see http://www.gnu.org/licenses/
 * or write to the Free Software Foundation, Inc., 51 Franklin Street,
 * Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

//swiftlint:disable function_body_length
//swiftlint:disable file_length
//swiftlint:disable line_length
//swiftlint:disable identifier_name

/**
 * @brief Body sensors c struct
 * 
 * Note:
 *     TotalWeight (per foot) included as a Foot Sensor
 */
extension wb_sensors_foot_sensors {

    /**
     * Create a new `wb_sensors_foot_sensors`.
     */
    public static func make() -> wb_sensors_foot_sensors {
        return wb_sensors_foot_sensors(0.0)
    }

    /**
     * Create a new `wb_sensors_foot_sensors`.
     */
    public init(_ LFoot_FSR_FrontLeft: Float = 0.0, LFoot_FSR_FrontRight: Float = 0.0, LFoot_FSR_RearLeft: Float = 0.0, LFoot_FSR_RearRight: Float = 0.0, LFoot_FSR_CenterOfPressure_X: Float = 0.0, LFoot_FSR_CenterOfPressure_Y: Float = 0.0, LFoot_FSR_TotalWeight: Float = 0.0, RFoot_FSR_FrontLeft: Float = 0.0, RFoot_FSR_FrontRight: Float = 0.0, RFoot_FSR_RearLeft: Float = 0.0, RFoot_FSR_RearRight: Float = 0.0, RFoot_FSR_CenterOfPressure_X: Float = 0.0, RFoot_FSR_CenterOfPressure_Y: Float = 0.0, RFoot_FSR_TotalWeight: Float = 0.0, LFoot_Bumper_Left: Bool = true, LFoot_Bumper_Right: Bool = true, RFoot_Bumper_Left: Bool = true, RFoot_Bumper_Right: Bool = true) {
        self.init()
        self.LFoot_FSR_FrontLeft = LFoot_FSR_FrontLeft
        self.LFoot_FSR_FrontRight = LFoot_FSR_FrontRight
        self.LFoot_FSR_RearLeft = LFoot_FSR_RearLeft
        self.LFoot_FSR_RearRight = LFoot_FSR_RearRight
        self.LFoot_FSR_CenterOfPressure_X = LFoot_FSR_CenterOfPressure_X
        self.LFoot_FSR_CenterOfPressure_Y = LFoot_FSR_CenterOfPressure_Y
        self.LFoot_FSR_TotalWeight = LFoot_FSR_TotalWeight
        self.RFoot_FSR_FrontLeft = RFoot_FSR_FrontLeft
        self.RFoot_FSR_FrontRight = RFoot_FSR_FrontRight
        self.RFoot_FSR_RearLeft = RFoot_FSR_RearLeft
        self.RFoot_FSR_RearRight = RFoot_FSR_RearRight
        self.RFoot_FSR_CenterOfPressure_X = RFoot_FSR_CenterOfPressure_X
        self.RFoot_FSR_CenterOfPressure_Y = RFoot_FSR_CenterOfPressure_Y
        self.RFoot_FSR_TotalWeight = RFoot_FSR_TotalWeight
        self.LFoot_Bumper_Left = LFoot_Bumper_Left
        self.LFoot_Bumper_Right = LFoot_Bumper_Right
        self.RFoot_Bumper_Left = RFoot_Bumper_Left
        self.RFoot_Bumper_Right = RFoot_Bumper_Right
    }

    /**
     * Create a `wb_sensors_foot_sensors` from a dictionary.
     */
    public init(fromDictionary dictionary: [String: Any]) {
        self.init()
        guard
            let LFoot_FSR_FrontLeft = dictionary["LFoot_FSR_FrontLeft"] as? Float,
            let LFoot_FSR_FrontRight = dictionary["LFoot_FSR_FrontRight"] as? Float,
            let LFoot_FSR_RearLeft = dictionary["LFoot_FSR_RearLeft"] as? Float,
            let LFoot_FSR_RearRight = dictionary["LFoot_FSR_RearRight"] as? Float,
            let LFoot_FSR_CenterOfPressure_X = dictionary["LFoot_FSR_CenterOfPressure_X"] as? Float,
            let LFoot_FSR_CenterOfPressure_Y = dictionary["LFoot_FSR_CenterOfPressure_Y"] as? Float,
            let LFoot_FSR_TotalWeight = dictionary["LFoot_FSR_TotalWeight"] as? Float,
            let RFoot_FSR_FrontLeft = dictionary["RFoot_FSR_FrontLeft"] as? Float,
            let RFoot_FSR_FrontRight = dictionary["RFoot_FSR_FrontRight"] as? Float,
            let RFoot_FSR_RearLeft = dictionary["RFoot_FSR_RearLeft"] as? Float,
            let RFoot_FSR_RearRight = dictionary["RFoot_FSR_RearRight"] as? Float,
            let RFoot_FSR_CenterOfPressure_X = dictionary["RFoot_FSR_CenterOfPressure_X"] as? Float,
            let RFoot_FSR_CenterOfPressure_Y = dictionary["RFoot_FSR_CenterOfPressure_Y"] as? Float,
            let RFoot_FSR_TotalWeight = dictionary["RFoot_FSR_TotalWeight"] as? Float,
            let LFoot_Bumper_Left = dictionary["LFoot_Bumper_Left"] as? Bool,
            let LFoot_Bumper_Right = dictionary["LFoot_Bumper_Right"] as? Bool,
            let RFoot_Bumper_Left = dictionary["RFoot_Bumper_Left"] as? Bool,
            let RFoot_Bumper_Right = dictionary["RFoot_Bumper_Right"] as? Bool
        else {
            fatalError("Unable to convert \(dictionary) to wb_sensors_foot_sensors.")
        }
        self.LFoot_FSR_FrontLeft = LFoot_FSR_FrontLeft
        self.LFoot_FSR_FrontRight = LFoot_FSR_FrontRight
        self.LFoot_FSR_RearLeft = LFoot_FSR_RearLeft
        self.LFoot_FSR_RearRight = LFoot_FSR_RearRight
        self.LFoot_FSR_CenterOfPressure_X = LFoot_FSR_CenterOfPressure_X
        self.LFoot_FSR_CenterOfPressure_Y = LFoot_FSR_CenterOfPressure_Y
        self.LFoot_FSR_TotalWeight = LFoot_FSR_TotalWeight
        self.RFoot_FSR_FrontLeft = RFoot_FSR_FrontLeft
        self.RFoot_FSR_FrontRight = RFoot_FSR_FrontRight
        self.RFoot_FSR_RearLeft = RFoot_FSR_RearLeft
        self.RFoot_FSR_RearRight = RFoot_FSR_RearRight
        self.RFoot_FSR_CenterOfPressure_X = RFoot_FSR_CenterOfPressure_X
        self.RFoot_FSR_CenterOfPressure_Y = RFoot_FSR_CenterOfPressure_Y
        self.RFoot_FSR_TotalWeight = RFoot_FSR_TotalWeight
        self.LFoot_Bumper_Left = LFoot_Bumper_Left
        self.LFoot_Bumper_Right = LFoot_Bumper_Right
        self.RFoot_Bumper_Left = RFoot_Bumper_Left
        self.RFoot_Bumper_Right = RFoot_Bumper_Right
    }

}

extension wb_sensors_foot_sensors: CustomStringConvertible {

    /**
     * Convert to a description String.
     */
    public var description: String {
        var descString = ""
        descString += "LFoot_FSR_FrontLeft=\(self.LFoot_FSR_FrontLeft)"
        descString += ", "
        descString += "LFoot_FSR_FrontRight=\(self.LFoot_FSR_FrontRight)"
        descString += ", "
        descString += "LFoot_FSR_RearLeft=\(self.LFoot_FSR_RearLeft)"
        descString += ", "
        descString += "LFoot_FSR_RearRight=\(self.LFoot_FSR_RearRight)"
        descString += ", "
        descString += "LFoot_FSR_CenterOfPressure_X=\(self.LFoot_FSR_CenterOfPressure_X)"
        descString += ", "
        descString += "LFoot_FSR_CenterOfPressure_Y=\(self.LFoot_FSR_CenterOfPressure_Y)"
        descString += ", "
        descString += "LFoot_FSR_TotalWeight=\(self.LFoot_FSR_TotalWeight)"
        descString += ", "
        descString += "RFoot_FSR_FrontLeft=\(self.RFoot_FSR_FrontLeft)"
        descString += ", "
        descString += "RFoot_FSR_FrontRight=\(self.RFoot_FSR_FrontRight)"
        descString += ", "
        descString += "RFoot_FSR_RearLeft=\(self.RFoot_FSR_RearLeft)"
        descString += ", "
        descString += "RFoot_FSR_RearRight=\(self.RFoot_FSR_RearRight)"
        descString += ", "
        descString += "RFoot_FSR_CenterOfPressure_X=\(self.RFoot_FSR_CenterOfPressure_X)"
        descString += ", "
        descString += "RFoot_FSR_CenterOfPressure_Y=\(self.RFoot_FSR_CenterOfPressure_Y)"
        descString += ", "
        descString += "RFoot_FSR_TotalWeight=\(self.RFoot_FSR_TotalWeight)"
        descString += ", "
        descString += "LFoot_Bumper_Left=\(self.LFoot_Bumper_Left)"
        descString += ", "
        descString += "LFoot_Bumper_Right=\(self.LFoot_Bumper_Right)"
        descString += ", "
        descString += "RFoot_Bumper_Left=\(self.RFoot_Bumper_Left)"
        descString += ", "
        descString += "RFoot_Bumper_Right=\(self.RFoot_Bumper_Right)"
        return descString
    }

}

extension wb_sensors_foot_sensors: Equatable {}

public func == (lhs: wb_sensors_foot_sensors, rhs: wb_sensors_foot_sensors) -> Bool {
    return lhs.LFoot_FSR_FrontLeft == rhs.LFoot_FSR_FrontLeft
        && lhs.LFoot_FSR_FrontRight == rhs.LFoot_FSR_FrontRight
        && lhs.LFoot_FSR_RearLeft == rhs.LFoot_FSR_RearLeft
        && lhs.LFoot_FSR_RearRight == rhs.LFoot_FSR_RearRight
        && lhs.LFoot_FSR_CenterOfPressure_X == rhs.LFoot_FSR_CenterOfPressure_X
        && lhs.LFoot_FSR_CenterOfPressure_Y == rhs.LFoot_FSR_CenterOfPressure_Y
        && lhs.LFoot_FSR_TotalWeight == rhs.LFoot_FSR_TotalWeight
        && lhs.RFoot_FSR_FrontLeft == rhs.RFoot_FSR_FrontLeft
        && lhs.RFoot_FSR_FrontRight == rhs.RFoot_FSR_FrontRight
        && lhs.RFoot_FSR_RearLeft == rhs.RFoot_FSR_RearLeft
        && lhs.RFoot_FSR_RearRight == rhs.RFoot_FSR_RearRight
        && lhs.RFoot_FSR_CenterOfPressure_X == rhs.RFoot_FSR_CenterOfPressure_X
        && lhs.RFoot_FSR_CenterOfPressure_Y == rhs.RFoot_FSR_CenterOfPressure_Y
        && lhs.RFoot_FSR_TotalWeight == rhs.RFoot_FSR_TotalWeight
        && lhs.LFoot_Bumper_Left == rhs.LFoot_Bumper_Left
        && lhs.LFoot_Bumper_Right == rhs.LFoot_Bumper_Right
        && lhs.RFoot_Bumper_Left == rhs.RFoot_Bumper_Left
        && lhs.RFoot_Bumper_Right == rhs.RFoot_Bumper_Right
}
