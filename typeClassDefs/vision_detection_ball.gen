-author Carl Lusty

-c
#include <stdint.h>

enum BallOptions {
	NoBallDetected = 0, ///< No Ball Found
	BallDetected        ///< Ball Found
};

-properties
enum BallOptions sightingType = NoBallDetected // Ball detection details.

int16_t x = 0  //X position measured from the left position of the image, growing positive to the right
int16_t y = 0  //Y position measured from the bottom of the image, growing positive up
uint16_t r = 0  //Radius

+c++
bool operator==(VisionDetectionBall &lhs, VisionDetectionBall &rhs) {
    return lhs.sightingType() == rhs.sightingType() &&
        lhs.x() == rhs.x() && lhs.y() == rhs.y() && lhs.r() == rhs.r();
}

bool operator!=(VisionDetectionBall &lhs, VisionDetectionBalls &rhs) {
    return !(lhs == rhs);
}

-comment
Results for the Ball Ray Tracer (guvision). 
Results are a percentage of the image utilised, at whatever the resolution and FOV happen to be.
You can check the vision status message for resolution and FOV information.
Coords:
    x, Int16.MinValue <-> Int16.MaxValue
    y, Int16.MinValue <-> Int16.MaxValue
    r, 0 <-> UInt16.MaxValue
Minus x Left-Most Position in the image : MinValue
Plus x Right-Most Position of the image :MaxValue
Plus y Up-Most Position of the image : MaxValue
Minus y Down-most position of the image: MinValue
Center near 0,0

Radius is relative to width. A radius is always positive. A radius of 0 pixels in
a width of resolution 640 posts 0, a radius of 640 pixels post MaxValue,
a radius of 64 pixels posts MaxValue/10
