/*                                                                      
 *  guwhiteboardtypelist_generated.h                                    
 *                                                                      
 *  Created by Carl Lusty in 2013.                                      
 *  Copyright (c) 2013 Carl Lusty                                       
 *  All rights reserved.                                                
 */                                                                     
                                                                        
                                                                        
#ifndef _GUWHITEBOARD_TYPELIST_H_                                       
#define _GUWHITEBOARD_TYPELIST_H_                                       
                                                                        
#include "gugenericwhiteboardobject.h"                                
                                                                        
                                                                        
//Generated on: Fri Feb  8 17:44:04 2013
//Generated by user: carl
                              
namespace guWhiteboard                                                  
{                                                                       
                                                                        
extern "C"                                                            
{                                                                       
#include "guwhiteboardtypelist_c_generated.h"                         
}                                                                       
                                                                        
	///print to stdout
        class GSW_PRINT_t : public generic_whiteboard_object<char *> { public: GSW_PRINT_t(gu_simple_whiteboard_descriptor *wbd = NULL) : generic_whiteboard_object<char *>(wbd, GSW_PRINT) {} };

	///speech output message
        class GSW_SAY_t : public generic_whiteboard_object<char *> { public: GSW_SAY_t(gu_simple_whiteboard_descriptor *wbd = NULL) : generic_whiteboard_object<char *>(wbd, GSW_SAY) {} };

	///debug speech message
        class GSW_SPEECH_t : public generic_whiteboard_object<char *> { public: GSW_SPEECH_t(gu_simple_whiteboard_descriptor *wbd = NULL) : generic_whiteboard_object<char *>(wbd, GSW_SPEECH) {} };

	///This is a test to see of the vision pipeline runs from the new wb to the old one using a generated class template.
        class kRunVisionPipelineTest_t : public generic_whiteboard_object<bool> { public: kRunVisionPipelineTest_t(gu_simple_whiteboard_descriptor *wbd = NULL) : generic_whiteboard_object<bool>(wbd, kRunVisionPipelineTest) {} };

	///Is the walk engine ready to run.
        class RunningClass_t : public generic_whiteboard_object<class RunningClass> { public: RunningClass_t(gu_simple_whiteboard_descriptor *wbd = NULL) : generic_whiteboard_object<class RunningClass>(wbd, kNaoIsReadyToRun) {} };

	///uiyguh
        class kNaoIsReadyToRun2_t : public generic_whiteboard_object<bool> { public: kNaoIsReadyToRun2_t(gu_simple_whiteboard_descriptor *wbd = NULL) : generic_whiteboard_object<bool>(wbd, kNaoIsReadyToRun2) {} };

}

#endif                          
